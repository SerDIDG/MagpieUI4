.pt__field {
    .clearfix;
    margin: 0 0 @CmForm-FieldIndent 0;
    padding: 0;
    display: block;
    clear: both;

    &.is-first,
    &:first-child {
        margin-top: 0;
    }

    &.is-last,
    &:last-child {
        margin-bottom: 0;
    }

    > dt,
    > .field__title {
        width: var( --pt-field--title-width);
        display: block;
        margin: 0;
        padding: ((@CmForm-FieldHeight - @CmFont-Base-LineHeight) / 2) 0;
        float: left;
        line-height: @CmFont-Base-LineHeight;

        span.required {
            margin: 0 0 0 @CmIndent-XXXSmall;
            color: @CmColor-Danger-DarkDefault;
        }
    }

    > dd,
    > .field__descr {
        display: block;
        margin: 0 0 0 calc(var(--pt-field--title-width) + @CmForm-FieldIndent);
        padding: 0;
        position: relative;

        &:first-child {
            margin: 0;
        }
    }

    &.success {
        > dt,
        > .field__title {
            color: @CmColor-Success-DarkDefault;
        }

        .pt__field__error {
            color: @CmColor-Success-DarkDefault;
        }

        .input {
            .input.input-success;
        }
    }

    &.warning {
        > dt,
        > .field__title {
            color: @CmColor-Warning-DarkDefault;
        }

        .pt__field__error {
            color: @CmColor-Warning-DarkDefault;
        }

        .input {
            .input.input-warning;
        }
    }

    &.error,
    &.danger {
        > dt,
        > .field__title {
            color: @CmColor-Danger-DarkDefault;
        }

        .pt__field__error {
            color: @CmColor-Danger-DarkDefault;
        }

        .input {
            .input.input-error;
        }
    }

    &.is-text {
        > dt,
        > .field__title {
            padding: 0;
        }
    }

    &.is-no-label {
        > dt,
        > .field__title {
            display: none;
        }

        > dd,
        > .field__descr {
            margin-left: 0;
        }
    }

    &.is-hidden-label {
        > dt,
        > .field__title {
            visibility: hidden;
        }
    }

    &.is-check-line {
        display: flex;
        align-content: space-between;

        > dt,
        > .field__title {
            width: auto;
            float: none;
            flex: auto;
        }

        > dd,
        > .field__descr {
            margin-left: @CmForm-FieldInnerIndent;
        }
    }

    &.is-flex {
        display: flex;

        > dt,
        > .field__title  {
            flex: none;
        }

        > dd,
        > .field__descr {
            /* Fix for overflow in flex model */
            min-width: 0;
            flex: auto;
            margin-left: @CmForm-FieldIndent;
        }
    }

    &.is-box,
    &.is-form-box {
        .cm__box;

        > dt,
        > .field__title {
            width: auto;
            float: none;
        }

        > dd,
        > .field__descr {
            margin: 0 0 @CmForm-FieldInnerIndent 0;
            padding: 0;

            &:last-child {
                margin: 0;
            }
        }

        &.is-no-label {
            > dt,
            > .field__title {
                display: none;
            }
        }

        &.is-first {
            > dt,
            > .field__title {
                padding-top: 0;
            }
        }
    }

    &.is-form-box {
        .cm__box;
        margin-bottom: @CmForm-FieldIndent;
    }

    &.field-indent,
    &.field-inner-indent {
        .cm__box;
        margin-bottom: @CmForm-FieldInnerIndent;
    }

    &.field-outer-indent {
        .cm__box;
        margin-bottom: @CmForm-FieldIndent;
    }

    &.is-no-indent {
        margin: 0;
    }

    &.is-hidden {
        display: none;
    }

    &.align-center {
        > dt,
        > .field__title {
            text-align: center;
        }
    }
}

.pt__field-label {
    @padding_calc: (@CmForm-FieldHeight - @CmFont-Base-LineHeight) / 2;
    @padding: max(round((@padding_calc)), 0px);
    display: block;
    margin: 0;
    padding: @padding 0;
    line-height: @CmFont-Base-LineHeight;
}

/* *** FIELD HINT *** */

.pt__field__hint {
    &:extend(.cm__inherit all);
    .cm__font--hint-cursive;
    text-transform: none;

    &.success {
        .cm__color__success;
    }

    &.warning {
        .cm__color__warning;
    }

    &.error,
    &.danger {
        .cm__color__danger;
    }
}

ul.pt__field__hint {
    @padding_calc: round(((@CmForm-FieldIndent - @CmFont-Base-LineHeightSmall) / 2));
    @padding: max(min(@padding_calc, 0px), 4px);
    margin: 0;
    padding: @padding 0;
    display: block;
    list-style: none;

    li {
        margin-top: 4px;

        &:first-child {
            margin: 0;
        }

        &:before {
            content: '-';
            margin-right: 4px;
        }
    }
}

/* *** CONTENT *** */

.pt__field__content {
    .placeholder {
        .cm__font--placeholder;
        .cm__text-nowrap;
        position: absolute;
        z-index: 2;
        padding: 0 @CmInput-Padding;
        cursor: text;
        pointer-events: none;
        .mx__position(0, 0, 0, 0);
        user-select: none;

        span {
            display: block;
            transform-origin: left top;
            .mx__transition(all, @CmUI-Transition-Duration, @CmUI-MotionAsymmetric);
        }

        &.pull-top {
            span {
                .mx__transform(scale(@CmForm-FieldPlaceholder-Scale) translateY(-6px));
            }
        }
    }

    .pt__field__content--size-helper(@CmForm-FieldHeight, @CmInput-Padding, @CmBorder-Width, @CmFont-Base-LineHeight);
}

// /* *** FIELDSET ***/

.pt__fieldset {
    padding: @CmIndent-Medium;
    margin: @CmForm-FieldIndent 0 0 0;
    border: @CmBorder-Default;
    border-radius: @CmBorder-Radius;

    legend {
        @indent_calc: (@CmFont-Base-LineHeight / 2);
        @indent: round(@indent_calc);
        margin-bottom: -@indent;
        line-height: @CmFont-Base-LineHeight;
    }

    &:first-child {
        margin: 0;
    }

    &.success {
        border-color: @CmColor-Success-DarkDefault;

        legend {
            color: @CmColor-Success-DarkDefault;
        }
    }

    &.warning {
        border-color: @CmColor-Warning-DarkDefault;

        legend {
            color: @CmColor-Warning-DarkDefault;
        }
    }

    &.error,
    &.danger {
        border-color: @CmColor-Danger-DarkDefault;

        legend {
            color: @CmColor-Danger-DarkDefault;
        }
    }
}

// /* *** MIXINS *** */

.pt__filed--size (@size, @indent: @CmForm-FieldIndent) {
    > dt,
    > .field__title {
        width: @size;
    }

    > dd,
    > .field__descr {
        margin-left: @size + @indent;
    }
}

.pt__field__content--size-helper (@height, @paddingX, @borderWidth, @lineHeight) {
    @inputPadding_calc: (@height - @lineHeight - @borderWidth * 2) / 2;
    @inputPadding: max(ceil((@inputPadding_calc)), @paddingX);

    .placeholder {
        line-height: @height;
        padding: 0 (@inputPadding + @borderWidth);
    }

    &.is-placeholder-above {
        .input {
            padding-top: ceil((@inputPadding * 0.75 * 2));
            padding-bottom: ceil((@inputPadding * 0.25 * 2));
        }
    }
}

/* ******* PART: FIELD: ADAPTIVE ******* */

@media only screen and (max-width: @CmScreen-Mobile) {

    html.is-adaptive {
        .pt__field {
            &.is-check-line {
                display: block;
            }

            &.is-flex {
                display: flex;

                > dd,
                > .field__descr {
                    margin-left: @CmForm-FieldIndent;
                }
            }

            &.is-adaptive {
                display: block;

                > dt,
                > .field__title {
                    width: auto;
                    float: none;
                }

                > dd,
                > .field__descr {
                    margin: 0 0 @CmForm-FieldInnerIndent;
                    float: none;

                    &:last-child {
                        margin: 0;
                    }
                }
            }

            &.is-hidden {
                display: none;
            }
        }
    }

}
